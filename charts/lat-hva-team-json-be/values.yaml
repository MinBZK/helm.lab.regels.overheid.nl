# Default values for lat-hva-team-json-be.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.digitalocean.com/regels-overheid-nl/lat-hva-team-json-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9000

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  root: /lab/jas-annotatie-tool
  hosts:
    - paths:
        - path: /lab/jas-annotatie-tool/graphql
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

postgresql:
  enabled: true
  auth:
    username: hva
    database: hva
    password: ""
    postgresPassword: ""
    enablePostgresUser: true
  architecture: standalone
  primary:
    livenessProbe:
      initialDelaySeconds: 120
  volumePermissions:
    enabled: true

redis:
  enabled: true

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# livenessProbe:
#   exec:
#     command:
#       - php-fpm-healthcheck
#       - --listen-queue=10 # fails if there are more than 10 processes waiting in the fpm queue
#       - --accepted-conn=5000 # fails after fpm has served more than 5k requests, this will force the pod to reset, use with caution
#   initialDelaySeconds: 0
#   periodSeconds: 10
# readinessProbe:
#   exec:
#     command:
#       - php-fpm-healthcheck # a simple ping since this means it's ready to handle traffic
#   initialDelaySeconds: 1
#   periodSeconds: 5

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
